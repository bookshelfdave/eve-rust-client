/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.3.8
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// GetCharactersCharacterIdStatsIndustry : industry object

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GetCharactersCharacterIdStatsIndustry {
  /// hacking_successes integer
  #[serde(rename = "hacking_successes")]
  hacking_successes: Option<i64>,
  /// jobs_cancelled integer
  #[serde(rename = "jobs_cancelled")]
  jobs_cancelled: Option<i64>,
  /// jobs_completed_copy_blueprint integer
  #[serde(rename = "jobs_completed_copy_blueprint")]
  jobs_completed_copy_blueprint: Option<i64>,
  /// jobs_completed_invention integer
  #[serde(rename = "jobs_completed_invention")]
  jobs_completed_invention: Option<i64>,
  /// jobs_completed_manufacture integer
  #[serde(rename = "jobs_completed_manufacture")]
  jobs_completed_manufacture: Option<i64>,
  /// jobs_completed_manufacture_asteroid integer
  #[serde(rename = "jobs_completed_manufacture_asteroid")]
  jobs_completed_manufacture_asteroid: Option<i64>,
  /// jobs_completed_manufacture_asteroid_quantity integer
  #[serde(rename = "jobs_completed_manufacture_asteroid_quantity")]
  jobs_completed_manufacture_asteroid_quantity: Option<i64>,
  /// jobs_completed_manufacture_charge integer
  #[serde(rename = "jobs_completed_manufacture_charge")]
  jobs_completed_manufacture_charge: Option<i64>,
  /// jobs_completed_manufacture_charge_quantity integer
  #[serde(rename = "jobs_completed_manufacture_charge_quantity")]
  jobs_completed_manufacture_charge_quantity: Option<i64>,
  /// jobs_completed_manufacture_commodity integer
  #[serde(rename = "jobs_completed_manufacture_commodity")]
  jobs_completed_manufacture_commodity: Option<i64>,
  /// jobs_completed_manufacture_commodity_quantity integer
  #[serde(rename = "jobs_completed_manufacture_commodity_quantity")]
  jobs_completed_manufacture_commodity_quantity: Option<i64>,
  /// jobs_completed_manufacture_deployable integer
  #[serde(rename = "jobs_completed_manufacture_deployable")]
  jobs_completed_manufacture_deployable: Option<i64>,
  /// jobs_completed_manufacture_deployable_quantity integer
  #[serde(rename = "jobs_completed_manufacture_deployable_quantity")]
  jobs_completed_manufacture_deployable_quantity: Option<i64>,
  /// jobs_completed_manufacture_drone integer
  #[serde(rename = "jobs_completed_manufacture_drone")]
  jobs_completed_manufacture_drone: Option<i64>,
  /// jobs_completed_manufacture_drone_quantity integer
  #[serde(rename = "jobs_completed_manufacture_drone_quantity")]
  jobs_completed_manufacture_drone_quantity: Option<i64>,
  /// jobs_completed_manufacture_implant integer
  #[serde(rename = "jobs_completed_manufacture_implant")]
  jobs_completed_manufacture_implant: Option<i64>,
  /// jobs_completed_manufacture_implant_quantity integer
  #[serde(rename = "jobs_completed_manufacture_implant_quantity")]
  jobs_completed_manufacture_implant_quantity: Option<i64>,
  /// jobs_completed_manufacture_module integer
  #[serde(rename = "jobs_completed_manufacture_module")]
  jobs_completed_manufacture_module: Option<i64>,
  /// jobs_completed_manufacture_module_quantity integer
  #[serde(rename = "jobs_completed_manufacture_module_quantity")]
  jobs_completed_manufacture_module_quantity: Option<i64>,
  /// jobs_completed_manufacture_other integer
  #[serde(rename = "jobs_completed_manufacture_other")]
  jobs_completed_manufacture_other: Option<i64>,
  /// jobs_completed_manufacture_other_quantity integer
  #[serde(rename = "jobs_completed_manufacture_other_quantity")]
  jobs_completed_manufacture_other_quantity: Option<i64>,
  /// jobs_completed_manufacture_ship integer
  #[serde(rename = "jobs_completed_manufacture_ship")]
  jobs_completed_manufacture_ship: Option<i64>,
  /// jobs_completed_manufacture_ship_quantity integer
  #[serde(rename = "jobs_completed_manufacture_ship_quantity")]
  jobs_completed_manufacture_ship_quantity: Option<i64>,
  /// jobs_completed_manufacture_structure integer
  #[serde(rename = "jobs_completed_manufacture_structure")]
  jobs_completed_manufacture_structure: Option<i64>,
  /// jobs_completed_manufacture_structure_quantity integer
  #[serde(rename = "jobs_completed_manufacture_structure_quantity")]
  jobs_completed_manufacture_structure_quantity: Option<i64>,
  /// jobs_completed_manufacture_subsystem integer
  #[serde(rename = "jobs_completed_manufacture_subsystem")]
  jobs_completed_manufacture_subsystem: Option<i64>,
  /// jobs_completed_manufacture_subsystem_quantity integer
  #[serde(rename = "jobs_completed_manufacture_subsystem_quantity")]
  jobs_completed_manufacture_subsystem_quantity: Option<i64>,
  /// jobs_completed_material_productivity integer
  #[serde(rename = "jobs_completed_material_productivity")]
  jobs_completed_material_productivity: Option<i64>,
  /// jobs_completed_time_productivity integer
  #[serde(rename = "jobs_completed_time_productivity")]
  jobs_completed_time_productivity: Option<i64>,
  /// jobs_started_copy_blueprint integer
  #[serde(rename = "jobs_started_copy_blueprint")]
  jobs_started_copy_blueprint: Option<i64>,
  /// jobs_started_invention integer
  #[serde(rename = "jobs_started_invention")]
  jobs_started_invention: Option<i64>,
  /// jobs_started_manufacture integer
  #[serde(rename = "jobs_started_manufacture")]
  jobs_started_manufacture: Option<i64>,
  /// jobs_started_material_productivity integer
  #[serde(rename = "jobs_started_material_productivity")]
  jobs_started_material_productivity: Option<i64>,
  /// jobs_started_time_productivity integer
  #[serde(rename = "jobs_started_time_productivity")]
  jobs_started_time_productivity: Option<i64>,
  /// reprocess_item integer
  #[serde(rename = "reprocess_item")]
  reprocess_item: Option<i64>,
  /// reprocess_item_quantity integer
  #[serde(rename = "reprocess_item_quantity")]
  reprocess_item_quantity: Option<i64>
}

impl GetCharactersCharacterIdStatsIndustry {
  /// industry object
  pub fn new() -> GetCharactersCharacterIdStatsIndustry {
    GetCharactersCharacterIdStatsIndustry {
      hacking_successes: None,
      jobs_cancelled: None,
      jobs_completed_copy_blueprint: None,
      jobs_completed_invention: None,
      jobs_completed_manufacture: None,
      jobs_completed_manufacture_asteroid: None,
      jobs_completed_manufacture_asteroid_quantity: None,
      jobs_completed_manufacture_charge: None,
      jobs_completed_manufacture_charge_quantity: None,
      jobs_completed_manufacture_commodity: None,
      jobs_completed_manufacture_commodity_quantity: None,
      jobs_completed_manufacture_deployable: None,
      jobs_completed_manufacture_deployable_quantity: None,
      jobs_completed_manufacture_drone: None,
      jobs_completed_manufacture_drone_quantity: None,
      jobs_completed_manufacture_implant: None,
      jobs_completed_manufacture_implant_quantity: None,
      jobs_completed_manufacture_module: None,
      jobs_completed_manufacture_module_quantity: None,
      jobs_completed_manufacture_other: None,
      jobs_completed_manufacture_other_quantity: None,
      jobs_completed_manufacture_ship: None,
      jobs_completed_manufacture_ship_quantity: None,
      jobs_completed_manufacture_structure: None,
      jobs_completed_manufacture_structure_quantity: None,
      jobs_completed_manufacture_subsystem: None,
      jobs_completed_manufacture_subsystem_quantity: None,
      jobs_completed_material_productivity: None,
      jobs_completed_time_productivity: None,
      jobs_started_copy_blueprint: None,
      jobs_started_invention: None,
      jobs_started_manufacture: None,
      jobs_started_material_productivity: None,
      jobs_started_time_productivity: None,
      reprocess_item: None,
      reprocess_item_quantity: None
    }
  }

  pub fn set_hacking_successes(&mut self, hacking_successes: i64) {
    self.hacking_successes = Some(hacking_successes);
  }

  pub fn with_hacking_successes(mut self, hacking_successes: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.hacking_successes = Some(hacking_successes);
    self
  }

  pub fn hacking_successes(&self) -> Option<&i64> {
    self.hacking_successes.as_ref()
  }

  pub fn reset_hacking_successes(&mut self) {
    self.hacking_successes = None;
  }

  pub fn set_jobs_cancelled(&mut self, jobs_cancelled: i64) {
    self.jobs_cancelled = Some(jobs_cancelled);
  }

  pub fn with_jobs_cancelled(mut self, jobs_cancelled: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_cancelled = Some(jobs_cancelled);
    self
  }

  pub fn jobs_cancelled(&self) -> Option<&i64> {
    self.jobs_cancelled.as_ref()
  }

  pub fn reset_jobs_cancelled(&mut self) {
    self.jobs_cancelled = None;
  }

  pub fn set_jobs_completed_copy_blueprint(&mut self, jobs_completed_copy_blueprint: i64) {
    self.jobs_completed_copy_blueprint = Some(jobs_completed_copy_blueprint);
  }

  pub fn with_jobs_completed_copy_blueprint(mut self, jobs_completed_copy_blueprint: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_copy_blueprint = Some(jobs_completed_copy_blueprint);
    self
  }

  pub fn jobs_completed_copy_blueprint(&self) -> Option<&i64> {
    self.jobs_completed_copy_blueprint.as_ref()
  }

  pub fn reset_jobs_completed_copy_blueprint(&mut self) {
    self.jobs_completed_copy_blueprint = None;
  }

  pub fn set_jobs_completed_invention(&mut self, jobs_completed_invention: i64) {
    self.jobs_completed_invention = Some(jobs_completed_invention);
  }

  pub fn with_jobs_completed_invention(mut self, jobs_completed_invention: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_invention = Some(jobs_completed_invention);
    self
  }

  pub fn jobs_completed_invention(&self) -> Option<&i64> {
    self.jobs_completed_invention.as_ref()
  }

  pub fn reset_jobs_completed_invention(&mut self) {
    self.jobs_completed_invention = None;
  }

  pub fn set_jobs_completed_manufacture(&mut self, jobs_completed_manufacture: i64) {
    self.jobs_completed_manufacture = Some(jobs_completed_manufacture);
  }

  pub fn with_jobs_completed_manufacture(mut self, jobs_completed_manufacture: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_manufacture = Some(jobs_completed_manufacture);
    self
  }

  pub fn jobs_completed_manufacture(&self) -> Option<&i64> {
    self.jobs_completed_manufacture.as_ref()
  }

  pub fn reset_jobs_completed_manufacture(&mut self) {
    self.jobs_completed_manufacture = None;
  }

  pub fn set_jobs_completed_manufacture_asteroid(&mut self, jobs_completed_manufacture_asteroid: i64) {
    self.jobs_completed_manufacture_asteroid = Some(jobs_completed_manufacture_asteroid);
  }

  pub fn with_jobs_completed_manufacture_asteroid(mut self, jobs_completed_manufacture_asteroid: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_manufacture_asteroid = Some(jobs_completed_manufacture_asteroid);
    self
  }

  pub fn jobs_completed_manufacture_asteroid(&self) -> Option<&i64> {
    self.jobs_completed_manufacture_asteroid.as_ref()
  }

  pub fn reset_jobs_completed_manufacture_asteroid(&mut self) {
    self.jobs_completed_manufacture_asteroid = None;
  }

  pub fn set_jobs_completed_manufacture_asteroid_quantity(&mut self, jobs_completed_manufacture_asteroid_quantity: i64) {
    self.jobs_completed_manufacture_asteroid_quantity = Some(jobs_completed_manufacture_asteroid_quantity);
  }

  pub fn with_jobs_completed_manufacture_asteroid_quantity(mut self, jobs_completed_manufacture_asteroid_quantity: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_manufacture_asteroid_quantity = Some(jobs_completed_manufacture_asteroid_quantity);
    self
  }

  pub fn jobs_completed_manufacture_asteroid_quantity(&self) -> Option<&i64> {
    self.jobs_completed_manufacture_asteroid_quantity.as_ref()
  }

  pub fn reset_jobs_completed_manufacture_asteroid_quantity(&mut self) {
    self.jobs_completed_manufacture_asteroid_quantity = None;
  }

  pub fn set_jobs_completed_manufacture_charge(&mut self, jobs_completed_manufacture_charge: i64) {
    self.jobs_completed_manufacture_charge = Some(jobs_completed_manufacture_charge);
  }

  pub fn with_jobs_completed_manufacture_charge(mut self, jobs_completed_manufacture_charge: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_manufacture_charge = Some(jobs_completed_manufacture_charge);
    self
  }

  pub fn jobs_completed_manufacture_charge(&self) -> Option<&i64> {
    self.jobs_completed_manufacture_charge.as_ref()
  }

  pub fn reset_jobs_completed_manufacture_charge(&mut self) {
    self.jobs_completed_manufacture_charge = None;
  }

  pub fn set_jobs_completed_manufacture_charge_quantity(&mut self, jobs_completed_manufacture_charge_quantity: i64) {
    self.jobs_completed_manufacture_charge_quantity = Some(jobs_completed_manufacture_charge_quantity);
  }

  pub fn with_jobs_completed_manufacture_charge_quantity(mut self, jobs_completed_manufacture_charge_quantity: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_manufacture_charge_quantity = Some(jobs_completed_manufacture_charge_quantity);
    self
  }

  pub fn jobs_completed_manufacture_charge_quantity(&self) -> Option<&i64> {
    self.jobs_completed_manufacture_charge_quantity.as_ref()
  }

  pub fn reset_jobs_completed_manufacture_charge_quantity(&mut self) {
    self.jobs_completed_manufacture_charge_quantity = None;
  }

  pub fn set_jobs_completed_manufacture_commodity(&mut self, jobs_completed_manufacture_commodity: i64) {
    self.jobs_completed_manufacture_commodity = Some(jobs_completed_manufacture_commodity);
  }

  pub fn with_jobs_completed_manufacture_commodity(mut self, jobs_completed_manufacture_commodity: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_manufacture_commodity = Some(jobs_completed_manufacture_commodity);
    self
  }

  pub fn jobs_completed_manufacture_commodity(&self) -> Option<&i64> {
    self.jobs_completed_manufacture_commodity.as_ref()
  }

  pub fn reset_jobs_completed_manufacture_commodity(&mut self) {
    self.jobs_completed_manufacture_commodity = None;
  }

  pub fn set_jobs_completed_manufacture_commodity_quantity(&mut self, jobs_completed_manufacture_commodity_quantity: i64) {
    self.jobs_completed_manufacture_commodity_quantity = Some(jobs_completed_manufacture_commodity_quantity);
  }

  pub fn with_jobs_completed_manufacture_commodity_quantity(mut self, jobs_completed_manufacture_commodity_quantity: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_manufacture_commodity_quantity = Some(jobs_completed_manufacture_commodity_quantity);
    self
  }

  pub fn jobs_completed_manufacture_commodity_quantity(&self) -> Option<&i64> {
    self.jobs_completed_manufacture_commodity_quantity.as_ref()
  }

  pub fn reset_jobs_completed_manufacture_commodity_quantity(&mut self) {
    self.jobs_completed_manufacture_commodity_quantity = None;
  }

  pub fn set_jobs_completed_manufacture_deployable(&mut self, jobs_completed_manufacture_deployable: i64) {
    self.jobs_completed_manufacture_deployable = Some(jobs_completed_manufacture_deployable);
  }

  pub fn with_jobs_completed_manufacture_deployable(mut self, jobs_completed_manufacture_deployable: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_manufacture_deployable = Some(jobs_completed_manufacture_deployable);
    self
  }

  pub fn jobs_completed_manufacture_deployable(&self) -> Option<&i64> {
    self.jobs_completed_manufacture_deployable.as_ref()
  }

  pub fn reset_jobs_completed_manufacture_deployable(&mut self) {
    self.jobs_completed_manufacture_deployable = None;
  }

  pub fn set_jobs_completed_manufacture_deployable_quantity(&mut self, jobs_completed_manufacture_deployable_quantity: i64) {
    self.jobs_completed_manufacture_deployable_quantity = Some(jobs_completed_manufacture_deployable_quantity);
  }

  pub fn with_jobs_completed_manufacture_deployable_quantity(mut self, jobs_completed_manufacture_deployable_quantity: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_manufacture_deployable_quantity = Some(jobs_completed_manufacture_deployable_quantity);
    self
  }

  pub fn jobs_completed_manufacture_deployable_quantity(&self) -> Option<&i64> {
    self.jobs_completed_manufacture_deployable_quantity.as_ref()
  }

  pub fn reset_jobs_completed_manufacture_deployable_quantity(&mut self) {
    self.jobs_completed_manufacture_deployable_quantity = None;
  }

  pub fn set_jobs_completed_manufacture_drone(&mut self, jobs_completed_manufacture_drone: i64) {
    self.jobs_completed_manufacture_drone = Some(jobs_completed_manufacture_drone);
  }

  pub fn with_jobs_completed_manufacture_drone(mut self, jobs_completed_manufacture_drone: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_manufacture_drone = Some(jobs_completed_manufacture_drone);
    self
  }

  pub fn jobs_completed_manufacture_drone(&self) -> Option<&i64> {
    self.jobs_completed_manufacture_drone.as_ref()
  }

  pub fn reset_jobs_completed_manufacture_drone(&mut self) {
    self.jobs_completed_manufacture_drone = None;
  }

  pub fn set_jobs_completed_manufacture_drone_quantity(&mut self, jobs_completed_manufacture_drone_quantity: i64) {
    self.jobs_completed_manufacture_drone_quantity = Some(jobs_completed_manufacture_drone_quantity);
  }

  pub fn with_jobs_completed_manufacture_drone_quantity(mut self, jobs_completed_manufacture_drone_quantity: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_manufacture_drone_quantity = Some(jobs_completed_manufacture_drone_quantity);
    self
  }

  pub fn jobs_completed_manufacture_drone_quantity(&self) -> Option<&i64> {
    self.jobs_completed_manufacture_drone_quantity.as_ref()
  }

  pub fn reset_jobs_completed_manufacture_drone_quantity(&mut self) {
    self.jobs_completed_manufacture_drone_quantity = None;
  }

  pub fn set_jobs_completed_manufacture_implant(&mut self, jobs_completed_manufacture_implant: i64) {
    self.jobs_completed_manufacture_implant = Some(jobs_completed_manufacture_implant);
  }

  pub fn with_jobs_completed_manufacture_implant(mut self, jobs_completed_manufacture_implant: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_manufacture_implant = Some(jobs_completed_manufacture_implant);
    self
  }

  pub fn jobs_completed_manufacture_implant(&self) -> Option<&i64> {
    self.jobs_completed_manufacture_implant.as_ref()
  }

  pub fn reset_jobs_completed_manufacture_implant(&mut self) {
    self.jobs_completed_manufacture_implant = None;
  }

  pub fn set_jobs_completed_manufacture_implant_quantity(&mut self, jobs_completed_manufacture_implant_quantity: i64) {
    self.jobs_completed_manufacture_implant_quantity = Some(jobs_completed_manufacture_implant_quantity);
  }

  pub fn with_jobs_completed_manufacture_implant_quantity(mut self, jobs_completed_manufacture_implant_quantity: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_manufacture_implant_quantity = Some(jobs_completed_manufacture_implant_quantity);
    self
  }

  pub fn jobs_completed_manufacture_implant_quantity(&self) -> Option<&i64> {
    self.jobs_completed_manufacture_implant_quantity.as_ref()
  }

  pub fn reset_jobs_completed_manufacture_implant_quantity(&mut self) {
    self.jobs_completed_manufacture_implant_quantity = None;
  }

  pub fn set_jobs_completed_manufacture_module(&mut self, jobs_completed_manufacture_module: i64) {
    self.jobs_completed_manufacture_module = Some(jobs_completed_manufacture_module);
  }

  pub fn with_jobs_completed_manufacture_module(mut self, jobs_completed_manufacture_module: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_manufacture_module = Some(jobs_completed_manufacture_module);
    self
  }

  pub fn jobs_completed_manufacture_module(&self) -> Option<&i64> {
    self.jobs_completed_manufacture_module.as_ref()
  }

  pub fn reset_jobs_completed_manufacture_module(&mut self) {
    self.jobs_completed_manufacture_module = None;
  }

  pub fn set_jobs_completed_manufacture_module_quantity(&mut self, jobs_completed_manufacture_module_quantity: i64) {
    self.jobs_completed_manufacture_module_quantity = Some(jobs_completed_manufacture_module_quantity);
  }

  pub fn with_jobs_completed_manufacture_module_quantity(mut self, jobs_completed_manufacture_module_quantity: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_manufacture_module_quantity = Some(jobs_completed_manufacture_module_quantity);
    self
  }

  pub fn jobs_completed_manufacture_module_quantity(&self) -> Option<&i64> {
    self.jobs_completed_manufacture_module_quantity.as_ref()
  }

  pub fn reset_jobs_completed_manufacture_module_quantity(&mut self) {
    self.jobs_completed_manufacture_module_quantity = None;
  }

  pub fn set_jobs_completed_manufacture_other(&mut self, jobs_completed_manufacture_other: i64) {
    self.jobs_completed_manufacture_other = Some(jobs_completed_manufacture_other);
  }

  pub fn with_jobs_completed_manufacture_other(mut self, jobs_completed_manufacture_other: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_manufacture_other = Some(jobs_completed_manufacture_other);
    self
  }

  pub fn jobs_completed_manufacture_other(&self) -> Option<&i64> {
    self.jobs_completed_manufacture_other.as_ref()
  }

  pub fn reset_jobs_completed_manufacture_other(&mut self) {
    self.jobs_completed_manufacture_other = None;
  }

  pub fn set_jobs_completed_manufacture_other_quantity(&mut self, jobs_completed_manufacture_other_quantity: i64) {
    self.jobs_completed_manufacture_other_quantity = Some(jobs_completed_manufacture_other_quantity);
  }

  pub fn with_jobs_completed_manufacture_other_quantity(mut self, jobs_completed_manufacture_other_quantity: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_manufacture_other_quantity = Some(jobs_completed_manufacture_other_quantity);
    self
  }

  pub fn jobs_completed_manufacture_other_quantity(&self) -> Option<&i64> {
    self.jobs_completed_manufacture_other_quantity.as_ref()
  }

  pub fn reset_jobs_completed_manufacture_other_quantity(&mut self) {
    self.jobs_completed_manufacture_other_quantity = None;
  }

  pub fn set_jobs_completed_manufacture_ship(&mut self, jobs_completed_manufacture_ship: i64) {
    self.jobs_completed_manufacture_ship = Some(jobs_completed_manufacture_ship);
  }

  pub fn with_jobs_completed_manufacture_ship(mut self, jobs_completed_manufacture_ship: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_manufacture_ship = Some(jobs_completed_manufacture_ship);
    self
  }

  pub fn jobs_completed_manufacture_ship(&self) -> Option<&i64> {
    self.jobs_completed_manufacture_ship.as_ref()
  }

  pub fn reset_jobs_completed_manufacture_ship(&mut self) {
    self.jobs_completed_manufacture_ship = None;
  }

  pub fn set_jobs_completed_manufacture_ship_quantity(&mut self, jobs_completed_manufacture_ship_quantity: i64) {
    self.jobs_completed_manufacture_ship_quantity = Some(jobs_completed_manufacture_ship_quantity);
  }

  pub fn with_jobs_completed_manufacture_ship_quantity(mut self, jobs_completed_manufacture_ship_quantity: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_manufacture_ship_quantity = Some(jobs_completed_manufacture_ship_quantity);
    self
  }

  pub fn jobs_completed_manufacture_ship_quantity(&self) -> Option<&i64> {
    self.jobs_completed_manufacture_ship_quantity.as_ref()
  }

  pub fn reset_jobs_completed_manufacture_ship_quantity(&mut self) {
    self.jobs_completed_manufacture_ship_quantity = None;
  }

  pub fn set_jobs_completed_manufacture_structure(&mut self, jobs_completed_manufacture_structure: i64) {
    self.jobs_completed_manufacture_structure = Some(jobs_completed_manufacture_structure);
  }

  pub fn with_jobs_completed_manufacture_structure(mut self, jobs_completed_manufacture_structure: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_manufacture_structure = Some(jobs_completed_manufacture_structure);
    self
  }

  pub fn jobs_completed_manufacture_structure(&self) -> Option<&i64> {
    self.jobs_completed_manufacture_structure.as_ref()
  }

  pub fn reset_jobs_completed_manufacture_structure(&mut self) {
    self.jobs_completed_manufacture_structure = None;
  }

  pub fn set_jobs_completed_manufacture_structure_quantity(&mut self, jobs_completed_manufacture_structure_quantity: i64) {
    self.jobs_completed_manufacture_structure_quantity = Some(jobs_completed_manufacture_structure_quantity);
  }

  pub fn with_jobs_completed_manufacture_structure_quantity(mut self, jobs_completed_manufacture_structure_quantity: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_manufacture_structure_quantity = Some(jobs_completed_manufacture_structure_quantity);
    self
  }

  pub fn jobs_completed_manufacture_structure_quantity(&self) -> Option<&i64> {
    self.jobs_completed_manufacture_structure_quantity.as_ref()
  }

  pub fn reset_jobs_completed_manufacture_structure_quantity(&mut self) {
    self.jobs_completed_manufacture_structure_quantity = None;
  }

  pub fn set_jobs_completed_manufacture_subsystem(&mut self, jobs_completed_manufacture_subsystem: i64) {
    self.jobs_completed_manufacture_subsystem = Some(jobs_completed_manufacture_subsystem);
  }

  pub fn with_jobs_completed_manufacture_subsystem(mut self, jobs_completed_manufacture_subsystem: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_manufacture_subsystem = Some(jobs_completed_manufacture_subsystem);
    self
  }

  pub fn jobs_completed_manufacture_subsystem(&self) -> Option<&i64> {
    self.jobs_completed_manufacture_subsystem.as_ref()
  }

  pub fn reset_jobs_completed_manufacture_subsystem(&mut self) {
    self.jobs_completed_manufacture_subsystem = None;
  }

  pub fn set_jobs_completed_manufacture_subsystem_quantity(&mut self, jobs_completed_manufacture_subsystem_quantity: i64) {
    self.jobs_completed_manufacture_subsystem_quantity = Some(jobs_completed_manufacture_subsystem_quantity);
  }

  pub fn with_jobs_completed_manufacture_subsystem_quantity(mut self, jobs_completed_manufacture_subsystem_quantity: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_manufacture_subsystem_quantity = Some(jobs_completed_manufacture_subsystem_quantity);
    self
  }

  pub fn jobs_completed_manufacture_subsystem_quantity(&self) -> Option<&i64> {
    self.jobs_completed_manufacture_subsystem_quantity.as_ref()
  }

  pub fn reset_jobs_completed_manufacture_subsystem_quantity(&mut self) {
    self.jobs_completed_manufacture_subsystem_quantity = None;
  }

  pub fn set_jobs_completed_material_productivity(&mut self, jobs_completed_material_productivity: i64) {
    self.jobs_completed_material_productivity = Some(jobs_completed_material_productivity);
  }

  pub fn with_jobs_completed_material_productivity(mut self, jobs_completed_material_productivity: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_material_productivity = Some(jobs_completed_material_productivity);
    self
  }

  pub fn jobs_completed_material_productivity(&self) -> Option<&i64> {
    self.jobs_completed_material_productivity.as_ref()
  }

  pub fn reset_jobs_completed_material_productivity(&mut self) {
    self.jobs_completed_material_productivity = None;
  }

  pub fn set_jobs_completed_time_productivity(&mut self, jobs_completed_time_productivity: i64) {
    self.jobs_completed_time_productivity = Some(jobs_completed_time_productivity);
  }

  pub fn with_jobs_completed_time_productivity(mut self, jobs_completed_time_productivity: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_completed_time_productivity = Some(jobs_completed_time_productivity);
    self
  }

  pub fn jobs_completed_time_productivity(&self) -> Option<&i64> {
    self.jobs_completed_time_productivity.as_ref()
  }

  pub fn reset_jobs_completed_time_productivity(&mut self) {
    self.jobs_completed_time_productivity = None;
  }

  pub fn set_jobs_started_copy_blueprint(&mut self, jobs_started_copy_blueprint: i64) {
    self.jobs_started_copy_blueprint = Some(jobs_started_copy_blueprint);
  }

  pub fn with_jobs_started_copy_blueprint(mut self, jobs_started_copy_blueprint: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_started_copy_blueprint = Some(jobs_started_copy_blueprint);
    self
  }

  pub fn jobs_started_copy_blueprint(&self) -> Option<&i64> {
    self.jobs_started_copy_blueprint.as_ref()
  }

  pub fn reset_jobs_started_copy_blueprint(&mut self) {
    self.jobs_started_copy_blueprint = None;
  }

  pub fn set_jobs_started_invention(&mut self, jobs_started_invention: i64) {
    self.jobs_started_invention = Some(jobs_started_invention);
  }

  pub fn with_jobs_started_invention(mut self, jobs_started_invention: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_started_invention = Some(jobs_started_invention);
    self
  }

  pub fn jobs_started_invention(&self) -> Option<&i64> {
    self.jobs_started_invention.as_ref()
  }

  pub fn reset_jobs_started_invention(&mut self) {
    self.jobs_started_invention = None;
  }

  pub fn set_jobs_started_manufacture(&mut self, jobs_started_manufacture: i64) {
    self.jobs_started_manufacture = Some(jobs_started_manufacture);
  }

  pub fn with_jobs_started_manufacture(mut self, jobs_started_manufacture: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_started_manufacture = Some(jobs_started_manufacture);
    self
  }

  pub fn jobs_started_manufacture(&self) -> Option<&i64> {
    self.jobs_started_manufacture.as_ref()
  }

  pub fn reset_jobs_started_manufacture(&mut self) {
    self.jobs_started_manufacture = None;
  }

  pub fn set_jobs_started_material_productivity(&mut self, jobs_started_material_productivity: i64) {
    self.jobs_started_material_productivity = Some(jobs_started_material_productivity);
  }

  pub fn with_jobs_started_material_productivity(mut self, jobs_started_material_productivity: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_started_material_productivity = Some(jobs_started_material_productivity);
    self
  }

  pub fn jobs_started_material_productivity(&self) -> Option<&i64> {
    self.jobs_started_material_productivity.as_ref()
  }

  pub fn reset_jobs_started_material_productivity(&mut self) {
    self.jobs_started_material_productivity = None;
  }

  pub fn set_jobs_started_time_productivity(&mut self, jobs_started_time_productivity: i64) {
    self.jobs_started_time_productivity = Some(jobs_started_time_productivity);
  }

  pub fn with_jobs_started_time_productivity(mut self, jobs_started_time_productivity: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.jobs_started_time_productivity = Some(jobs_started_time_productivity);
    self
  }

  pub fn jobs_started_time_productivity(&self) -> Option<&i64> {
    self.jobs_started_time_productivity.as_ref()
  }

  pub fn reset_jobs_started_time_productivity(&mut self) {
    self.jobs_started_time_productivity = None;
  }

  pub fn set_reprocess_item(&mut self, reprocess_item: i64) {
    self.reprocess_item = Some(reprocess_item);
  }

  pub fn with_reprocess_item(mut self, reprocess_item: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.reprocess_item = Some(reprocess_item);
    self
  }

  pub fn reprocess_item(&self) -> Option<&i64> {
    self.reprocess_item.as_ref()
  }

  pub fn reset_reprocess_item(&mut self) {
    self.reprocess_item = None;
  }

  pub fn set_reprocess_item_quantity(&mut self, reprocess_item_quantity: i64) {
    self.reprocess_item_quantity = Some(reprocess_item_quantity);
  }

  pub fn with_reprocess_item_quantity(mut self, reprocess_item_quantity: i64) -> GetCharactersCharacterIdStatsIndustry {
    self.reprocess_item_quantity = Some(reprocess_item_quantity);
    self
  }

  pub fn reprocess_item_quantity(&self) -> Option<&i64> {
    self.reprocess_item_quantity.as_ref()
  }

  pub fn reset_reprocess_item_quantity(&mut self) {
    self.reprocess_item_quantity = None;
  }

}



